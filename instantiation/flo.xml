<testset><dataelements><pid xmlns="http://riddl.org/ns/common-patterns/properties/1.0">201068d1b8204cda8f38f91e72c6c898</pid><wheel xmlns="http://riddl.org/ns/common-patterns/properties/1.0">11</wheel><bearings xmlns="http://riddl.org/ns/common-patterns/properties/1.0">22</bearings><truck xmlns="http://riddl.org/ns/common-patterns/properties/1.0">33</truck><hardware xmlns="http://riddl.org/ns/common-patterns/properties/1.0">39</hardware></dataelements><handlerwrapper>DefaultHandlerWrapper</handlerwrapper><endpoints><truck xmlns="http://riddl.org/ns/common-patterns/properties/1.0">http://solo.wst.univie.ac.at/interop/2015/ue5/lager.php/truck/eisen</truck><wheel xmlns="http://riddl.org/ns/common-patterns/properties/1.0">http://solo.wst.univie.ac.at/interop/2015/ue5/lager.php/wheel/small</wheel><bearings xmlns="http://riddl.org/ns/common-patterns/properties/1.0">http://solo.wst.univie.ac.at/interop/2015/ue5/lager.php/bearings/mittel</bearings><hardware xmlns="http://riddl.org/ns/common-patterns/properties/1.0">http://solo.wst.univie.ac.at/interop/2015/ue5/lager.php/hardware/mm7</hardware><progress xmlns="http://riddl.org/ns/common-patterns/properties/1.0">http://wwwlab.cs.univie.ac.at/~a9506264/progress.php</progress><correlation xmlns="http://riddl.org/ns/common-patterns/properties/1.0">http://solo.wst.univie.ac.at/interop/2015/ue5/corr.php</correlation><produzieren xmlns="http://riddl.org/ns/common-patterns/properties/1.0">http://cpee.org:9350</produzieren></endpoints><description><description xmlns="http://cpee.org/ns/description/1.0">
  <manipulate id="man">
        data.pid = Digest::MD5.hexdigest(Kernel::rand().to_s)
      </manipulate>
  <parallel svg-label="">
    <parallel_branch>
      <call id="a11" endpoint="truck">
        <parameters>
          <label>"Menge truck"</label>
          <method>:get</method>
        </parameters>
        <finalize>data.truck = result["truck"] - 1</finalize>
      </call>
      <call id="a21" endpoint="truck">
        <parameters>
          <label>"Menge truck setzen"</label>
          <method>:put</method>
          <parameters>
            <menge>data.truck</menge>
          </parameters>
        </parameters>
      </call>
    </parallel_branch>
    <parallel_branch>
      <call id="a12" endpoint="wheel">
        <parameters>
          <label>"Menge wheel"</label>
          <method>:get</method>
        </parameters>
        <finalize>data.wheel = result["wheel"] - 1 </finalize>
      </call>
      <call id="a22" endpoint="wheel">
        <parameters>
          <label>"Menge wheel setzen"</label>
          <method>:put</method>
          <parameters>
            <menge>data.wheel</menge>
          </parameters>
        </parameters>
      </call>
    </parallel_branch>
    <parallel_branch>
      <call id="a13" endpoint="bearings">
        <parameters>
          <label>"Menge bearings"</label>
          <method>:get</method>
        </parameters>
        <finalize>data.bearings = result["bearings"] - 1</finalize>
      </call>
      <call id="a23" endpoint="bearings">
        <parameters>
          <label>"Menge bearings setzen"</label>
          <method>:put</method>
          <parameters>
            <menge>data.bearings</menge>
          </parameters>
        </parameters>
      </call>
    </parallel_branch>
    <parallel_branch>
      <call id="a14" endpoint="hardware">
        <parameters>
          <label>"Menge hardware"</label>
          <method>:get</method>
        </parameters>
        <finalize>data.hardware = result["hardware"] - 1</finalize>
      </call>
      <call id="a24" endpoint="hardware">
        <parameters>
          <label>"Menge hardware setzen"</label>
          <method>:put</method>
          <parameters>
            <menge>data.hardware </menge>
          </parameters>
        </parameters>
      </call>
    </parallel_branch>
  </parallel>
  <call id="a3" endpoint="produzieren">
    <parameters>
      <label>"Teil produzieren"</label>
      <method>:post</method>
      <parameters>
        <delegate>endpoints.progress</delegate>
        <async>endpoints.correlation</async>
        <pid>data.pid</pid>
      </parameters>
    </parameters>
  </call>
  <loop pre_test="data.progress == 'END'">
    <call id="a4" endpoint="correlation">
      <parameters>
        <label>"Warten auf Fortschritt"</label>
        <method>:post</method>
        <parameters>
          <pid>data.pid</pid>
        </parameters>
      </parameters>
      <finalize>data.progress = result["progress"]</finalize>
    </call>
  </loop>
</description></description><transformation><description type="copy"/><dataelements type="none"/><endpoints type="none"/></transformation><attributes><info xmlns="http://riddl.org/ns/common-patterns/properties/1.0">Beispiel Produktion</info><modeltype xmlns="http://riddl.org/ns/common-patterns/properties/1.0">CPEE</modeltype></attributes></testset>
