<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0 plus SVG 1.1//EN" "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/>
    <meta name="description" content="Distributed Wee"/>
    <link rel="stylesheet" href="/styles/content.css" type="text/css"/>
    <link rel="stylesheet" href="/styles/uni.css" type="text/css"/>
    <script src="static/jquery-1.3.2.min.js" type="text/javascript"></script>
  </head>
  <body>
    <div id='header'>
      <div class='back'><img src='/static/StyleImages/uni_siegel.png' width='215' height='60' alt=''/></div>
      <div class='right'><a href='http://www.univie.ac.at'><img src='/static/StyleImages/uni_logo.png' width='180' height='50' alt='University of Vienna'/></a></div>
      <div class='title'>
        <h1 class='title1'>Distributed WEE Cockpit</h1>
        <p class='title2'><a href="mailto:gerhard.stuermer@gmail.com">roemer</a>, eTM, schiki</p>
      </div>  
      <div class='bread'>
        <div><a href='/'>Overview</a></div>
      </div>
    </div>

    <div id="content">
      <table class="size-max">
        <tr>
          <td class="nowrap align-vertical-center margin-right-big">Create new Instance:</td>
          <td><input type="text" id="txt_name"/></td>
          <td><button class="nowrap" type="button" id="btn_book" onclick="makeNewInstance()">New Instance</button></td>
          <td class="size-max"></td>
        </tr>    
        <tr>
          <td colspan="3"><div id="div_instances"></div></td>
        </tr>
      </table>

      <div>
        <h2>Log:</h2>
        <div class="margin-bottom-small">The log shows all messages sent to the built in monitor from all created instances.</div>
        <div class="border size-max" id="txt_log"></div>
      </div>
    </div>  


    <script type="text/javascript">
    //<![CDATA[
      var wee_url = "";

      function listInstances() {
          console.log("Fetching existing instances");
          makeRequest("GET", wee_url,
          function(result) {
              console.log("appending "+result+" to instance listing");
              $("#div_instances").append(result);
          },
          report_failure);
      }
      function makeNewInstance() {
          // Fetch the url of the wee-riddle
          console.log("Creating new instance");
          $.ajax({
            type: "GET", cache: false,
            url: "remote",
            success: function(wee_url){
              // create a new instance and add a link
              var instance_name = $("#txt_name").val();
              console.log("calling: "+wee_url);
              makeRequest("POST", wee_url+"?name="+instance_name, new_instance_created, report_failure);
            }
          });
      }
      function new_instance_created(instance_id) {
          console.info("Adding Instance "+instance_id+"to list");
          var instance_name = $("#txt_name").val();
          console.log("Instance name = "+instance_name);
          console.log("Setting Instance Handler parameters");
          makeRequest("POST", wee_url+instance_id+"/properties/handlers?class=MonitoringHandler&argument="+encodeURIComponent(location.href+instance_id)+"/monitor",
              function() {
                  console.log("Done setting handler");
              },
              report_failure);
          $("#div_instances").append("<a href=\""+instance_id+"\" style=\"display:block\">Go to Instance "+instance_name+"</a>");
      }
      function report_failure(text) {
          console.log("ERROR: "+text);
      }
      function makeRequest(method, url, success, failure) {
          var req = new XMLHttpRequest();  
          req.open(method, url, true);
          req.onreadystatechange = function (e) {  
              if (req.readyState === 4) {  
                  if(req.status === 200) {
                      success(req.responseText);
                  } else {  
                      failure("method "+method+" to "+url+" failed");
                  }
                  method
              }  
          };  
          req.send(null);
      }
      function setPolling() {
          refreshLog();
          window.setTimeout("setPolling()", 3000);
      }
      var lastRefresh = "1.1.1980";
      function refreshLog() {
          var log_plain = "";
          makeRequest("GET", "monitor?since="+encodeURIComponent(lastRefresh),
              function(log) {
                  $("entry", log).each(function(){
                          stamp = $(this).attr("stamp");
                          type = $(this).attr("type");
                          details = $(this).attr("details");
                          log_plain = log_plain+"["+stamp+"]"+type+": "+details+"<br/>";
                          lastRefresh = stamp;
                      }

                  );
                  $("#txt_log").append("<p>"+log_plain+"</p>");
              }, report_failure
          );
      }

      // maximize log
      function setHeight() {
        if (typeof window.innerHeight != 'undefined') {
          var secure = 5;
          var cc = $('contentcontainer');
          var ic = $('icontent');
          var co = $('content');
          var h_text = $('CEWebS_text');
          if (cc.getHeight() == ic.getHeight()) {
            var h_window  = document.viewport.getHeight();
            var h_content = document.getElementsByTagName('body')[0].getHeight();
            var imed = (parseInt(co.getStyle('margin-bottom'))+parseInt(co.getStyle('padding-bottom')));
            if (h_window - h_content != 0) {
              h_text.style.height = (h_text.getHeight() + (h_window - h_content) - imed - secure)  + 'px';
            } else
              h_text.style.height = (h_text.offsetParent.getHeight()) + 'px';
          } else {
            var imed = (parseInt(co.getStyle('margin-top'))+parseInt(co.getStyle('margin-bottom'))+parseInt(co.getStyle('padding-top'))+parseInt(co.getStyle('padding-bottom')));
            h_text.style.height = (h_text.getHeight() + cc.getHeight() - ic.getHeight() - (co.positionedOffset().top * 2) - secure - imed) + 'px';
          }  
        }  
      }
      // window.onload = function() { setHeight(); };
      // window.onresize = function() { setHeight(); };

      // Fetch the url of the wee-riddle
      $.ajax({
        type: "GET", cache: false,
        url: "remote",
        success: function(url){
          wee_url = url;
          setPolling();
          listInstances();
        }
      });
      //]]>
    </script>

  </body>
</html>
