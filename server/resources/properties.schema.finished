<!--
  This file is part of CPEE.

  CPEE is free software: you can redistribute it and/or modify it under the terms
  of the GNU General Public License as published by the Free Software Foundation,
  either version 3 of the License, or (at your option) any later version.

  CPEE is distributed in the hope that it will be useful, but WITHOUT ANY
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU General Public License for more details.

  You should have received a copy of the GNU General Public License along with
  CPEE (file COPYING in the main directory).  If not, see
  <http://www.gnu.org/licenses/>.
-->

<properties xmlns="http://riddl.org/ns/common-patterns/properties/1.0">
  <info type="simple" modifiable="false" mutable="false">
    <text/>
  </info>
  <handlerwrapper type="simple" modifiable="false" mutable="false">
    <data type="string">
      <param name="pattern">[A-Z][a-zA-Z]*</param>
    </data>  
  </handlerwrapper>
  <dsl type="simple" modifiable="false" mutable="false">
    <text/>
  </dsl>
  <dslx type="arbitrary" modifiable="false" mutable="false"/>
  <description type="arbitrary" modifiable="false" mutable="false"/>
  <transformation type="complex" modifiable="false" mutable="false">
    <element name='description'>
      <attribute name='type'>
        <choice>
          <value>copy</value>
          <value>xslt</value>
          <value>rest</value>
        </choice>  
      </attribute>
      <data type="anyURI"/>
    </element>
    <element name='dataelements'>
      <attribute name='type'>
        <choice>
          <value>xslt</value>
          <value>rest</value>
        </choice>  
      </attribute>
      <data type="anyURI"/>
    </element>
    <element name='endpoints'>
      <attribute name='type'>
        <choice>
          <value>xslt</value>
          <value>rest</value>
        </choice>  
      </attribute>
      <data type="anyURI"/>
    </element>
  </transformation>
  <state type="state" modifiable="false" mutable="false">
    <ready>
      <ready putable="true"/>
      <running putable="true"/>
      <simulating putable="true"/>
    </ready>  
    <running>
      <stopping putable="true"/>
      <finished putable="false"/>
    </running>
    <simulating>
      <ready putable="false"/>
      <stopped putable="false"/>
    </simulating>
    <stopping>
      <stopped putable="false"/>
    </stopping>
    <stopped>
      <stopped putable="true"/>
      <running putable="true"/>
      <simulating putable="true"/>
    </stopped>  
    <finished/>
  </state>  
  <status type="complex" modifiable="false" mutable="false">
    <optional>
      <element name='id'>
        <data type="integer"/>
      </element>
      <element name='message'>
        <data type="string"/>
      </element>
    </optional>  
  </status>  
  <positions type="complex" modifiable="false" mutable="false">
    <zeroOrMore>
      <element>
        <anyName/>
        <data type="string">
          <param name="pattern">(at|after)(;[A-Za-z0-9]+)?</param>
        </data>  
      </element>
    </zeroOrMore>  
  </positions>  
  <dataelements type="complex" modifiable="false" mutable="false">
    <zeroOrMore>
      <element><anyName/><text/></element>
    </zeroOrMore>  
  </dataelements>  
  <endpoints type="complex" modifiable="false" mutable="false">
    <zeroOrMore>
      <element><anyName/><text/></element>
    </zeroOrMore>  
  </endpoints>
</properties>
